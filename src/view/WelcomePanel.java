/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import control.Controller;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import javax.sound.midi.Sequencer;
import javax.swing.ImageIcon;
import utils.Config;

/**
 *
 * @author alessandrogelsi
 */

public class WelcomePanel extends javax.swing.JPanel {
    
    private Image welcomeBackground = null;
    private MainGUI mainGUI = null;
    private String playerName;
    private boolean isKartSelected=false;
    private Sequencer sequencer = null;

    /** Creates new form WelcomePanel */

    public WelcomePanel() {
        initComponents();
        setBestTimes();
        setMusicSequencer();
    }


    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RandomChoiseButton = new javax.swing.JButton();
        StartButton = new javax.swing.JButton();
        ChooseCharacterLabel = new javax.swing.JLabel();
        WriteYourNameLabel = new javax.swing.JLabel();
        KartComboBox = new javax.swing.JComboBox<>();
        BackgroundLabel = new javax.swing.JLabel();
        PreviewKartLabel = new javax.swing.JLabel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        PlayerNameTextField = new javax.swing.JTextField();
        ActualRecordLabel = new javax.swing.JLabel();
        BestTimesLabel = new javax.swing.JLabel();

        setMaximumSize(new java.awt.Dimension(1100, 720));
        setMinimumSize(new java.awt.Dimension(1100, 720));
        setPreferredSize(new java.awt.Dimension(1100, 720));

        RandomChoiseButton.setBackground(new java.awt.Color(153, 153, 153));
        RandomChoiseButton.setFont(Config.getInstance().getFont(Font.BOLD, 20));
        RandomChoiseButton.setForeground(new java.awt.Color(255, 255, 255));
        RandomChoiseButton.setText("Random Choise!");
        RandomChoiseButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        RandomChoiseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RandomChoiseButtonActionPerformed(evt);
            }
        });

        StartButton.setBackground(new java.awt.Color(153, 153, 153));
        StartButton.setFont(Config.getInstance().getFont(Font.BOLD, 20));
        StartButton.setForeground(new java.awt.Color(255, 255, 255));
        StartButton.setText("Start!");
        StartButton.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        StartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartButtonActionPerformed(evt);
            }
        });

        ChooseCharacterLabel.setFont(Config.getInstance().getFont(Font.BOLD, 20));
        ChooseCharacterLabel.setForeground(new java.awt.Color(0, 102, 153));
        ChooseCharacterLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ChooseCharacterLabel.setText("Choose your character:");
        ChooseCharacterLabel.setPreferredSize(new java.awt.Dimension(150, 20));

        WriteYourNameLabel.setBackground(new java.awt.Color(100, 100, 70));
        WriteYourNameLabel.setFont(Config.getInstance().getFont(Font.BOLD, 20));
        WriteYourNameLabel.setForeground(new java.awt.Color(0, 102, 153));
        WriteYourNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        WriteYourNameLabel.setText("Write your name:");

        KartComboBox.setBackground(new java.awt.Color(153, 153, 153));
        KartComboBox.setFont(Config.getInstance().getFont(Font.BOLD, 20));
        KartComboBox.setForeground(new java.awt.Color(0, 102, 153));
        KartComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mario", "Luigi", "Peach", "Bowser", "Koopa", "Yoshi", "Donkey", " " }));
        KartComboBox.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        KartComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KartComboBoxActionPerformed(evt);
            }
        });

        PlayerNameTextField.setBackground(new java.awt.Color(153, 153, 153));
        PlayerNameTextField.setFont(Config.getInstance().getFont(Font.BOLD, 20));
        PlayerNameTextField.setForeground(new java.awt.Color(0, 102, 153));
        PlayerNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayerNameTextFieldActionPerformed(evt);
            }
        });

        ActualRecordLabel.setFont(Config.getInstance().getFont(Font.BOLD, 20));
        ActualRecordLabel.setForeground(new java.awt.Color(0, 102, 153));
        ActualRecordLabel.setText("Actual record:");
        ActualRecordLabel.setToolTipText("");

        BestTimesLabel.setBackground(new java.awt.Color(187, 187, 187));
        BestTimesLabel.setFont(Config.getInstance().getFont(Font.PLAIN, 16));
        BestTimesLabel.setForeground(new java.awt.Color(0, 102, 153));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(527, 527, 527)
                                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(ActualRecordLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(BestTimesLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addComponent(PreviewKartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(51, 51, 51))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(ChooseCharacterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(KartComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(RandomChoiseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 2, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(StartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(WriteYourNameLabel)
                            .addComponent(PlayerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)))
                .addComponent(BackgroundLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addContainerGap(126, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(BackgroundLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 676, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(KartComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(WriteYourNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ChooseCharacterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)))
                .addComponent(PlayerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ActualRecordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BestTimesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(PreviewKartLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RandomChoiseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(StartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(85, 85, 85))
        );
    }// </editor-fold>//GEN-END:initComponents


    private void StartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartButtonActionPerformed
        if(isKartSelected){
        Controller.getInstance().startStopRaceMusic("track", true);  
        Controller.getInstance().setPlayerName(PlayerNameTextField.getText());
        Controller.getInstance().loadPlayerName(Controller.getInstance().getPlayerName());
        Controller.getInstance().loadTeamGraphics(Controller.getInstance().getSelectedKartName(), TOOL_TIP_TEXT_KEY);
        Controller.getInstance().startStopTimer(true);
        }
    }//GEN-LAST:event_StartButtonActionPerformed

    private void KartComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KartComboBoxActionPerformed
        Controller.getInstance().setSelectedKart(KartComboBox.getSelectedIndex());
        isKartSelected=true;
        this.PreviewKartLabel.setIcon(new ImageIcon(Config.getInstance().getKartGif("KartGif", this.KartComboBox.getSelectedItem().toString())));
    }//GEN-LAST:event_KartComboBoxActionPerformed

    private void RandomChoiseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RandomChoiseButtonActionPerformed
         int index=0;
         index = (int) ((Math.random() * 7) % 7);
         Controller.getInstance().setSelectedKart(index);
         this.KartComboBox.setSelectedIndex(index);
         isKartSelected=true;

        if(index==0)
            this.PreviewKartLabel.setIcon(new ImageIcon(Config.getInstance().getKartGif("KartGif", "Mario")));
        else if(index==1)
            this.PreviewKartLabel.setIcon(new ImageIcon(Config.getInstance().getKartGif("KartGif", "Luigi")));
         else if(index==2)
            this.PreviewKartLabel.setIcon(new ImageIcon(Config.getInstance().getKartGif("KartGif", "Peach")));
         else if(index==3)
            this.PreviewKartLabel.setIcon(new ImageIcon(Config.getInstance().getKartGif("KartGif", "Bowser")));
         else if(index==4)
            this.PreviewKartLabel.setIcon(new ImageIcon(Config.getInstance().getKartGif("KartGif", "Koopa")));
         else if(index==5)
            this.PreviewKartLabel.setIcon(new ImageIcon(Config.getInstance().getKartGif("KartGif", "Yoshi")));
         else if(index==6)
            this.PreviewKartLabel.setIcon(new ImageIcon(Config.getInstance().getKartGif("KartGif", "Donkey")));
    }//GEN-LAST:event_RandomChoiseButtonActionPerformed

    private void PlayerNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayerNameTextFieldActionPerformed
        Controller.getInstance().setPlayerName(PlayerNameTextField.getText());
    }//GEN-LAST:event_PlayerNameTextFieldActionPerformed

    private void setMusicSequencer () {
        this.sequencer = Config.getInstance().getMusic("Music", "welcome");   
    };
    
    protected void startStopMusic(boolean condition) {
        if (condition) {        //condition == true means music has to start
            if (this.sequencer != null)
                this.sequencer.start();
        }
        else
            this.sequencer.stop();  
    };

    protected void setBackground() {
        this.welcomeBackground = Config.getInstance().getSelectedImage("WelcomeBackground", "WelcomePanel", ".png");
    };
     
    protected void setMainGUI(MainGUI mainGUI){
        this.mainGUI = mainGUI;
    };
    
    protected void setBestTimes(){
        this.BestTimesLabel.setText("1)" + "  " + String.valueOf(Controller.getInstance().getBestTimes()[0]) + " s;   " + 
                                       "2)" + "  " + String.valueOf(Controller.getInstance().getBestTimes()[1]) + " s;   " +
                                       "3)" + "  " + String.valueOf(Controller.getInstance().getBestTimes()[2]) + " s;   " );        
    };

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        if (this.welcomeBackground != null && this.mainGUI != null)
            g.drawImage(this.welcomeBackground, 0, 0, this.mainGUI.getWidth(), this.mainGUI.getHeight(), this);            
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ActualRecordLabel;
    private javax.swing.JLabel BackgroundLabel;
    private javax.swing.JLabel BestTimesLabel;
    private javax.swing.JLabel ChooseCharacterLabel;
    private javax.swing.JComboBox<String> KartComboBox;
    private javax.swing.JTextField PlayerNameTextField;
    private javax.swing.JLabel PreviewKartLabel;
    private javax.swing.JButton RandomChoiseButton;
    private javax.swing.JButton StartButton;
    private javax.swing.JLabel WriteYourNameLabel;
    private javax.swing.Box.Filler filler1;
    // End of variables declaration//GEN-END:variables
    
}//end of class
