/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;


import javax.swing.JFrame;

/**
 *
 * @author alessandrogelsi
 */
public class MainGUI extends JFrame {
      
    private view.RacePanel racePanel;
    private javax.swing.JLayeredPane layeredPane;
    private view.VictoryPanel victoryPanel;
    private view.WelcomePanel welcomePanel;

    /**
     * Creates new form MainGUI
     */
    
        public MainGUI() {
        initComponents();
        this.racePanel.setVisible(false);
        this.victoryPanel.setVisible(false);
        this.welcomePanel.setMainGUI(this);
        this.welcomePanel.setBackground();
        this.welcomePanel.startStopMusic(true);
        this.racePanel.setMainGUI(this);  
        this.victoryPanel.setMainGUI(this);
    }

   /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    
        private void initComponents() {

        layeredPane = new javax.swing.JLayeredPane();
        welcomePanel = new view.WelcomePanel();
        racePanel = new view.RacePanel();
        victoryPanel = new view.VictoryPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JMario Kart");
        setMinimumSize(new java.awt.Dimension(1110, 765));
        setPreferredSize(new java.awt.Dimension(1110, 765));
        setResizable(false);

        layeredPane.setDoubleBuffered(true);
        layeredPane.setMinimumSize(new java.awt.Dimension(1100, 720));

        layeredPane.setLayer(welcomePanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPane.setLayer(racePanel, javax.swing.JLayeredPane.DEFAULT_LAYER);
        layeredPane.setLayer(victoryPanel, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layeredPaneLayout = new javax.swing.GroupLayout(layeredPane);
        layeredPane.setLayout(layeredPaneLayout);
        layeredPaneLayout.setHorizontalGroup(
            layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(racePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(welcomePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1110, Short.MAX_VALUE))
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(victoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1110, Short.MAX_VALUE))
        );
        layeredPaneLayout.setVerticalGroup(
            layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layeredPaneLayout.createSequentialGroup()
                .addComponent(racePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(welcomePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE))
            .addGroup(layeredPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(victoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(layeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(layeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();

    }// </editor-fold>    // </editor-fold>//GEN-END:initComponents

      
    
//---------------------------------------------------------------
// STATIC CONSTANTS
//---------------------------------------------------------------    

    private final static int WINDOW_PREFERRED_WIDTH = 720;
    private final static int WINDOW_PREFERRED_HEIGHT = 1100;
    
//---------------------------------------------------------------
// INSTANCE ATTRIBUTES
//---------------------------------------------------------------
    
    protected void startStopWelcomeMusic(boolean condition) {
        this.welcomePanel.startStopMusic(condition);
    }
    
    protected void startStopRaceMusic(String trackTitle, boolean condition) {
        this.racePanel.startStopMusic(trackTitle, condition);
    }
    
    protected void startStopVictoryMusic(String trackTitle, boolean condition) {
        this.victoryPanel.startStopMusic( condition);
    }
    
    protected void loadTeamGraphics(String kartSprite, String raceBackground) {
        this.racePanel.setBackground();
        this.racePanel.setSprite(kartSprite);
        this.victoryPanel.setKartGif();     
        this.welcomePanel.setVisible(false);          
        this.racePanel.setVisible(true);
    };
        
    protected void quitRace(){
        this.victoryPanel.setBackground();
        this.racePanel.setVisible(false);
        this.victoryPanel.setVisible(true);
    };
      
    protected void restartNewGame(){
        this.victoryPanel.startStopMusic(false);
        this.welcomePanel.startStopMusic(true);
        this.welcomePanel.setBackground();
        this.victoryPanel.setVisible(false);
        this.welcomePanel.setVisible(true);
      };
      
    protected void loadPlayerName(String playerName){
        this.racePanel.setPlayerName(playerName);
        this.victoryPanel.setPlayerName(playerName);
    };
    
    protected void setActualTime(){
        this.victoryPanel.setTimeLabel();
    };
    
    protected void setBestTime(){
        this.welcomePanel.setBestTimes();
        this.victoryPanel.setBestTimes();
    };

    protected  void startStopTimer(boolean condition) {
        this.racePanel.startTimer();
        this.racePanel.startRefreshTimer();
    };
      
    protected void right(){
         this.racePanel.right();     
    };
      
    protected void left(){
         this.racePanel.left();     
    };
            
    protected void up(){
         this.racePanel.up();     
    };
                  
    protected void down(){
         this.racePanel.down();     
    };
    
    protected void resetAll(){
        this.racePanel.resetAll();
    }; 
    

 public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
 }
        //</editor-fold>

}
